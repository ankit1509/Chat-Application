{"version":3,"sources":["Component/MyMessage.js","Component/TheirMessage.js","Component/MessageForm.js","Component/ChatFeed.js","Component/LoginForm.js","Component/Header.js","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","trim","sendMessage","alert","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","loginStatus","setLoginStatus","useEffect","a","authObject","axios","get","headers","localStorage","setItem","getItem","to","required","align","Header","borderRadius","Brand","textDecoration","Burger","onClick","navbar","document","querySelector","dataset","classList","toggle","Menu","Container","Item","removeItem","setLogout","LogoutOutlined","App","logout","console","log","exact","path","render","projectID","userSecret","renderChatFeed","chatAppProps","ReactDom","getElementById"],"mappings":"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","file":"static/js/main.260a2ee1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const MyMessage = ({ message }) => {\r\n\r\n    if(message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n                \r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}} >\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;","import React from 'react'\r\n\r\nexport const TheirMessage = ({ lastMessage, message }) => {\r\n\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\" \r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n\r\n            {message?.attachments?.length > 0 \r\n                ? (\r\n                    <img\r\n                        src={message.attachments[0].file}\r\n                        alt=\"message-attachment\"\r\n                        className=\"message-image\"\r\n                        style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                    />\r\n                ) : (\r\n                    <div className=\"message\" style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px', float: 'left', backgroundColor: '#CABCDC'}}>\r\n                        {message.text}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import React from 'react'\r\nimport { useState } from 'react'\r\nimport {sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nexport const MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n        isTyping(props, chatId)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0){\r\n            sendMessage(creds, chatId, { text });   \r\n        }\r\n        else{\r\n            alert(\"Message can not to blank\");\r\n        }\r\n\r\n        setValue('')\r\n\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        e.preventDefault();\r\n\r\n        sendMessage(creds, chatId, { files: e.target.files, text: '' });\r\n\r\n    }\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message ... \"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display : 'none' }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","import React from \"react\";\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div/>;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (loginStatus) {\r\n      return () => {\r\n        <Redirect to=\"/dashboard\" />;\r\n      };\r\n    }\r\n  }, [loginStatus]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": \"4fcca4fa-bb1b-4bee-a528-a61f5c13a6c4\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n\r\n    try {\r\n      // username | password => chat engine -> give message\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n\r\n      // works out -> logged in\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      setLoginStatus(true);\r\n\r\n    } catch (err) {\r\n      // error -> incorrect credentials ...\r\n      setError(\r\n        `Oops, incorrect credentials, try again with correct credentials.`\r\n      );\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n\r\n  if (localStorage.getItem(\"username\")) {\r\n    return (\r\n      <>\r\n        <Redirect to=\"/dashboard\" />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"login-title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"login-input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"login-button\"\r\n              style={{ backgroundColor: \"#209cee\" }}\r\n            >\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n          <h2 className=\"login-error\">{error}</h2>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"bulma/css/bulma.min.css\";\r\nimport { Navbar } from \"react-bulma-components\";\r\nimport { LogoutOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Header.css';\r\n\r\nexport const Header = (props) => {\r\n\r\n\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"password\");\r\n\r\n    props.setLogout(false);\r\n\r\n  };\r\n\r\n  const handleBurger = (e) => {\r\n      var navbar = document.querySelector('#'+e.target.dataset.target)\r\n      e.target.classList.toggle('is-active');\r\n      navbar.classList.toggle('is-active');\r\n  }\r\n\r\n  return (\r\n    <Navbar\r\n      className=\"notification is-dark m-0 p-1\"\r\n      style={{ borderRadius: \"0px\" }}\r\n    >\r\n      <Navbar.Brand>\r\n        <Link className=\"navbar-item\" to=\"/dashboard\" style={{ textDecoration: \"none\" }}>\r\n          <h2 className=\"has-text-primary title is-4 m-0\">Chat Application</h2>\r\n        </Link>\r\n        <Navbar.Burger data-target=\"navigation\" onClick={handleBurger} />\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Menu id=\"navigation\" className=\"notification is-dark p-0\">\r\n        <Navbar.Container align=\"right\">\r\n            <Navbar.Item onClick={handleLogout} id=\"logout\">\r\n              <LogoutOutlined title=\"Log out\" className=\"m-0 mr-2 p-2\" />\r\n            </Navbar.Item>\r\n        </Navbar.Container>\r\n      </Navbar.Menu>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport \"./App.css\";\r\nimport ChatFeed from \"./Component/ChatFeed\";\r\nimport LoginForm from \"./Component/LoginForm\";\r\nimport Header from \"./Component/Header\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const App = () => {\r\n  const [logout, setLogout] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (logout === false) {\r\n      return () => {\r\n        console.log(\"logout\");\r\n        <Redirect from=\"/dashboard\" to=\"/\" />;\r\n      };\r\n    }\r\n  }, [logout]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <LoginForm />\r\n          </Route>\r\n          <Route\r\n            exact\r\n            path=\"/dashboard\"\r\n            render={() => {\r\n              if (!localStorage.getItem(\"username\")) {\r\n                return <Redirect to=\"/\" />;\r\n              } else {\r\n                return (\r\n                  <>\r\n                    <Header logout={logout} setLogout={setLogout} />\r\n\r\n                    <ChatEngine\r\n                      height=\"92vh\"\r\n                      projectID=\"4fcca4fa-bb1b-4bee-a528-a61f5c13a6c4\"\r\n                      userName={localStorage.getItem(\"username\")}\r\n                      userSecret={localStorage.getItem(\"password\")}\r\n                      renderChatFeed={(chatAppProps) => (\r\n                        <ChatFeed {...chatAppProps} />\r\n                      )}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n            }}\r\n          ></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDom.render(\r\n    <App/> ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}